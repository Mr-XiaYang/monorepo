{"version":3,"file":"index.js","sources":["../src/plugins/cors.ts","../src/plugins/swagger.ts","../src/plugins/websocket.ts","../src/plugins/index.ts","../src/routes/auth/index.ts","../src/routes/board/bitmap.ts","../src/routes/board/draw.ts","../src/routes/board/pixel.ts","../src/routes/board/ws.ts","../src/routes/board/index.ts","../src/routes/index.ts","../src/storage/client/redis.ts","../src/storage/index.ts","../src/config.ts","../src/index.ts"],"sourcesContent":["import fastifyPlugin from \"fastify-plugin\";\r\n\r\nimport fastifyCors, { FastifyCorsOptions } from \"@fastify/cors\";\r\n\r\nexport default fastifyPlugin(async (fastify) => {\r\n  await fastify.register<FastifyCorsOptions>(fastifyCors, {});\r\n}, {\r\n  name: \"cors\",\r\n});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\n\r\nimport fastifySwagger,{SwaggerOptions} from \"@fastify/swagger\";\r\n\r\nexport default fastifyPlugin(async (fastify) => {\r\n  fastify.register<SwaggerOptions>(fastifySwagger, {});\r\n}, {\r\n  name: \"swagger\",\r\n});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\n\r\nimport fastifyWebsocket, { WebsocketPluginOptions } from \"@fastify/websocket\";\r\n\r\nexport default fastifyPlugin(async (fastify) => {\r\n  await fastify.register<WebsocketPluginOptions>(fastifyWebsocket, {});\r\n}, {\r\n  name: \"websocket\",\r\n});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\nimport cors from \"./cors\";\r\nimport swagger from \"./swagger\";\r\nimport websocket from \"./websocket\";\r\n\r\nexport default fastifyPlugin(async (instance) => {\r\n  await instance.register(cors);\r\n  await instance.register(websocket);\r\n  await instance.register(swagger);\r\n}, {\r\n  name: \"plugins\",\r\n});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\n\r\nexport default fastifyPlugin(async (fastify) => {\r\n  fastify.route({\r\n    url: \"/sign\",\r\n    method: \"GET\",\r\n    async handler() {\r\n    },\r\n  });\r\n}, {name: \"auth-route\"});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\nimport { Static, Type } from \"@sinclair/typebox\";\r\nimport { commandOptions } from \"@redis/client\";\r\n\r\nexport default fastifyPlugin<{ prefix: string }>(async (fastify, opts) => {\r\n  const emptyBitmap = Buffer.from(Uint8ClampedArray.from(\r\n    new Array(1920 * 1080),\r\n    (_, i) => (i % 1080 && i % 2) ? 15 : 0,\r\n  ));\r\n  const paramsSchema = Type.Object({\r\n    index: Type.Integer({minimum: 1, maximum: 10}),\r\n  });\r\n  fastify.route<{\r\n    Params: Static<typeof paramsSchema>\r\n  }>({\r\n    url: `${opts.prefix}/bitmap/:index`,\r\n    method: \"GET\",\r\n    schema: {\r\n      params: paramsSchema,\r\n    },\r\n    async handler(req, reply) {\r\n      // 480*270\r\n      const {redis} = fastify;\r\n      const {index} = req.params;\r\n\r\n      let bitmap: Buffer | null = await redis.get(\r\n        commandOptions({returnBuffers: true}),\r\n        `place_bitmap_${index}`,\r\n      );\r\n      if (bitmap == null) {\r\n        bitmap = emptyBitmap;\r\n        await redis.set(`place_bitmap_${index}`, emptyBitmap);\r\n      }\r\n      reply.type(\"application/octet-stream\");\r\n      reply.send(bitmap.subarray(0, 1920 * 1080));\r\n    },\r\n  });\r\n});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\n\r\n\r\nexport default fastifyPlugin<{ prefix: string }>(async (fastify, opts) => {\r\n  fastify.route({\r\n    url: `${opts.prefix}/draw`,\r\n    method: \"GET\",\r\n    async handler() {\r\n    },\r\n  });\r\n});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\n\r\n\r\nexport default fastifyPlugin<{ prefix: string }>(async (fastify, opts) => {\r\n  fastify.route({\r\n    url: `${opts.prefix}/pixel/:id`,\r\n    method: \"GET\",\r\n    async handler(req, reply) {\r\n      reply.send({hello: \"world\"});\r\n    },\r\n  });\r\n});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\n\r\nexport default fastifyPlugin<{ prefix: string }>(async (fastify, opts) => {\r\n  fastify.get(`${opts.prefix}/`, {websocket: true}, async (connect) => {\r\n    connect.socket.on(\"message\", (message) => {\r\n      console.log(message);\r\n    });\r\n  });\r\n});\r\n\r\n","import fastifyPlugin from \"fastify-plugin\";\r\nimport bitmap from \"./bitmap\";\r\nimport draw from \"./draw\";\r\nimport pixel from \"./pixel\";\r\nimport ws from \"./ws\";\r\n\r\nexport default fastifyPlugin(async (fastify, opts: { prefix: string }) => {\r\n  await fastify.register(bitmap, opts);\r\n  await fastify.register(pixel, opts);\r\n  await fastify.register(draw, opts);\r\n  await fastify.register(ws, opts);\r\n}, {name: \"board-route\"});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\nimport auth from \"./auth\";\r\nimport board from \"./board\";\r\n\r\nexport default fastifyPlugin(async (fastify) => {\r\n  await fastify.register(auth, {prefix: \"/auth\"});\r\n  await fastify.register(board, {prefix: \"/board\"});\r\n}, {name: \"routes\"});\r\n","import type { RedisClientOptions, RedisClientType, RedisFunctions, RedisModules, RedisScripts } from \"@redis/client\";\r\nimport { createClient } from \"@redis/client\";\r\nimport fastifyPlugin from \"fastify-plugin\";\r\n\r\ndeclare module \"fastify\" {\r\n  interface FastifyInstance {\r\n    redis: RedisClientType & {\r\n      [namespace: string]: RedisClientType\r\n    };\r\n  }\r\n}\r\n\r\nexport type RedisPluginOptions = RedisClientOptions\r\n\r\nexport default fastifyPlugin<RedisPluginOptions>(async (fastify, opts) => {\r\n  if (fastify.redis) {\r\n    throw new Error(\"redis has already been registered\");\r\n  }\r\n  const client: RedisClientType<any, any, any> = createClient(opts);\r\n  fastify.decorate(\"redis\", client);\r\n  fastify.addHook(\"onClose\", () => {\r\n    client.quit();\r\n  });\r\n  try {\r\n    await client.connect();\r\n    await client.ping();\r\n  } catch (error) {\r\n    fastify.log.error(error, `[redis plugin]: ${(error as Error).message}`);\r\n  }\r\n});\r\n","import fastifyPlugin from \"fastify-plugin\";\r\nimport redis, { RedisPluginOptions } from \"./client/redis\";\r\n\r\nexport default fastifyPlugin(async (fastify) => {\r\n  await fastify.register<RedisPluginOptions>(redis, fastify.config.redisStorage);\r\n}, {name: \"routes\"});\r\n","import { RedisClientType } from \"@redis/client\";\r\nimport fastifyPlugin from \"fastify-plugin\";\r\nimport { Document, parseDocument } from \"yaml\";\r\nimport fs from \"fs\";\r\nimport { RedisPluginOptions } from \"./storage/client/redis\";\r\nimport path from \"path\";\r\n\r\ninterface ConfigPluginOptions {\r\n  configPath?: string;\r\n}\r\n\r\ndeclare module \"fastify\" {\r\n  interface FastifyInstance {\r\n    config: Config;\r\n  }\r\n}\r\n\r\ninterface Config {\r\n  redisStorage: RedisPluginOptions;\r\n}\r\n\r\nconst defaultConfig: Config = {\r\n  redisStorage: {\r\n    url: undefined,\r\n  },\r\n};\r\n\r\nexport default fastifyPlugin<ConfigPluginOptions>(async (fastify, opts) => {\r\n  const {configPath} = opts;\r\n  let config: Config = defaultConfig;\r\n  if (configPath) {\r\n    if (fs.existsSync(configPath)) {\r\n      config = Object.assign(defaultConfig, parseDocument(fs.readFileSync(configPath, \"utf-8\")).toJS());\r\n    } else {\r\n      fs.mkdirSync(path.dirname(configPath), {recursive: true});\r\n      fs.writeFileSync(configPath, new Document(defaultConfig).toString());\r\n    }\r\n  }\r\n  fastify.decorate(\"config\", config);\r\n});\r\n","import Fastify from \"fastify\";\r\nimport plugins from \"./plugins\";\r\nimport routes from \"./routes\";\r\nimport storage from \"./storage\";\r\nimport pino from \"pino\";\r\nimport pinoPretty from \"pino-pretty\";\r\nimport config from \"./config\";\r\n\r\nconst fastify = Fastify({logger: pino(pinoPretty({singleLine: true}))});\r\nfastify.register(config, {configPath: \"config.yaml\"});\r\nfastify.register(plugins);\r\nfastify.register(storage);\r\nfastify.register(routes);\r\nfastify.listen({host: \"0.0.0.0\", port: 8080}, (error) => {\r\n  if (!error) {\r\n    process.on(\"uncaughtException\", (error) => {\r\n      fastify.log.error(error, `[uncaughtException]: ${(error as Error).message}`);\r\n    });\r\n    process.on(\"unhandledRejection\", (error) => {\r\n      fastify.log.error(error, `[unhandledRejection]: ${(error as Error).message}`);\r\n    });\r\n  } else {\r\n    fastify.log.error(error);\r\n    process.exit(1);\r\n  }\r\n});\r\n"],"names":["fastifyPlugin","fastifyCors","fastifySwagger","fastifyWebsocket","Type","commandOptions","client","createClient","fs","parseDocument","path","Document","Fastify","pino","pinoPretty"],"mappings":"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"}