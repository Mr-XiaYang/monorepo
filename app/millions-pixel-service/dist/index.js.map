{"version":3,"file":"index.js","sources":["../src/plugins/swagger.ts","../src/plugins/websocket.ts","../src/plugins/index.ts","../src/routes/auth/index.ts","../src/routes/board/bitmap.ts","../src/routes/board/draw.ts","../src/routes/board/pixel.ts","../src/routes/board/ws.ts","../src/routes/board/index.ts","../src/routes/index.ts","../src/storage/client/redis.ts","../src/storage/index.ts","../src/index.ts"],"sourcesContent":["import FastifyPlugin from \"fastify-plugin\";\n\nimport FastifySwagger from \"@fastify/swagger\";\n\nexport default FastifyPlugin(async (fastify) => {\n  fastify.register(FastifySwagger, {});\n}, {\n  name: \"swagger\",\n});\n","import FastifyPlugin from \"fastify-plugin\";\n\nimport FastifyWebsocket from \"@fastify/websocket\";\n\nexport default FastifyPlugin(async (fastify) => {\n  fastify.register(FastifyWebsocket, {});\n}, {\n  name: \"websocker\",\n});\n","import FastifyPlugin from \"fastify-plugin\";\nimport Swagger from \"./swagger\";\nimport Websocket from \"./websocket\";\n\nexport default FastifyPlugin(async (instance) => {\n  instance.register(Websocket);\n  instance.register(Swagger);\n}, {\n  name: \"plugins\",\n});\n","import FastifyPlugin from \"fastify-plugin\";\n\nexport default FastifyPlugin(async (fastify) => {\n  fastify.route({\n    url: \"/sign\",\n    method: \"GET\",\n    async handler() {\n    },\n  });\n}, {name: \"auth-route\"});\n","import FastifyPlugin from \"fastify-plugin\";\nimport { Static, Type } from \"@sinclair/typebox\";\nimport { commandOptions } from \"@redis/client\";\n\nexport default FastifyPlugin<{ prefix: string }>(async (fastify, opts) => {\n  const paramsSchema = Type.Object({\n    x: Type.Any(),\n    y: Type.Integer(),\n  });\n  fastify.route<{\n    Params: Static<typeof paramsSchema>\n  }>({\n    url: `${opts.prefix}/bitmap/:x-:y`,\n    method: \"GET\",\n    schema: {\n      params: paramsSchema,\n    },\n    async handler(req, reply) {\n      // 480*270\n      const {redis} = fastify;\n      const {x, y} = req.params;\n      const result = await redis.bitField(`place_bitmap_${x}:${y}`, [\n        {operation: \"SET\", encoding: \"u8\", offset: \"#0\", value: 12},\n        {operation: \"SET\", encoding: \"u8\", offset: \"#1\", value: 13},\n        {operation: \"SET\", encoding: \"u8\", offset: \"#2\", value: 14},\n        {operation: \"SET\", encoding: \"u8\", offset: \"#3\", value: 15},\n      ]);\n      console.log(await redis.getBig(`place_bitmap_${x}:${y}`));\n      // console.log(Uint8Array.from(await redis.bitField(`place_bitmap_${x}:${y}`,\n      //   new Array(480 * 270).fill(undefined).map((_, index) => ({\n      //     operation: \"GET\", encoding: \"u8\", offset: `#${index}`,\n      //   })))));\n      // console.log(new Uint8Array(480 * 270 * 4).fill(255).length);\n    },\n  });\n});\n","import FastifyPlugin from \"fastify-plugin\";\n\n\nexport default FastifyPlugin<{ prefix: string }>(async (fastify, opts) => {\n  fastify.route({\n    url: `${opts.prefix}/draw`,\n    method: \"GET\",\n    async handler() {\n    },\n  });\n});\n","import FastifyPlugin from \"fastify-plugin\";\n\n\nexport default FastifyPlugin<{ prefix: string }>(async (fastify, opts) => {\n  fastify.route({\n    url: `${opts.prefix}/pixel/:id`,\n    method: \"GET\",\n    async handler(req, reply) {\n      reply.send({hello: \"world\"});\n    },\n  });\n});\n","import FastifyPlugin from \"fastify-plugin\";\n\nexport default FastifyPlugin<{ prefix: string }>(async (fastify, opts) => {\n  fastify.get(`${opts.prefix}/`, {websocket: true}, async (connect) => {\n    connect.socket.on(\"message\", (message) => {\n      console.log(message);\n    });\n  });\n});\n\n","import FastifyPlugin from \"fastify-plugin\";\nimport bitmap from \"./bitmap\";\nimport draw from \"./draw\";\nimport pixel from \"./pixel\";\nimport ws from \"./ws\";\n\nexport default FastifyPlugin(async (fastify, opts: { prefix: string }) => {\n  fastify.register(bitmap, opts);\n  fastify.register(pixel, opts);\n  fastify.register(draw, opts);\n  fastify.register(ws, opts);\n}, {name: \"board-route\"});\n","import FastifyPlugin from \"fastify-plugin\";\nimport auth from \"./auth\";\nimport board from \"./board\";\n\nexport default FastifyPlugin(async (fastify) => {\n  fastify.register(auth, {prefix: \"/auth\"});\n  fastify.register(board, {prefix: \"/board\"});\n}, {name: \"routes\"});\n","import type { RedisClientOptions, RedisClientType, RedisFunctions, RedisModules, RedisScripts } from \"@redis/client\";\nimport { createClient } from \"@redis/client\";\nimport fastifyPlugin from \"fastify-plugin\";\n\ndeclare module \"fastify\" {\n  interface FastifyInstance {\n    redis: RedisClientType & {\n      [namespace: string]: RedisClientType\n    };\n  }\n}\n\nexport type RedisOptions = RedisClientOptions & { namespace?: string; }\n\nexport default fastifyPlugin<RedisOptions>(async (fastify, opts) => {\n  const {namespace, ...redisOptions} = opts;\n  const client: RedisClientType<any, any, any> = createClient(redisOptions);\n  if (namespace) {\n    if (!fastify.redis) {\n      fastify.decorate(\"redis\", {});\n    }\n    if (fastify.redis[namespace]) {\n      throw new Error(`Redis '${namespace}' instance namespace has already been registered`);\n    }\n    fastify.redis[namespace] = client;\n    fastify.addHook(\"onClose\", () => {\n      fastify.redis[namespace].quit();\n    });\n  } else {\n    if (fastify.redis) {\n      throw new Error(\"redis has already been registered\");\n    }\n    fastify.decorate(\"redis\", client);\n    fastify.addHook(\"onClose\", () => {\n      fastify.redis.quit();\n    });\n  }\n  try {\n    await client.connect();\n    await client.ping();\n  } catch (error) {\n    fastify.log.error(error, `[redis plugin]: ${(error as Error).message}`);\n  }\n});\n","import FastifyPlugin from \"fastify-plugin\";\nimport redis, { RedisOptions } from \"./client/redis\";\n\nexport default FastifyPlugin(async (fastify) => {\n  fastify.register<RedisOptions>(redis, {});\n}, {name: \"routes\"});\n","import Fastify from \"fastify\";\nimport plugins from \"./plugins\";\nimport routes from \"./routes\";\nimport storage from \"./storage\";\nimport pino from \"pino\";\nimport pinoPretty from \"pino-pretty\";\n\nconst fastify = Fastify({logger: pino(pinoPretty({singleLine: true}))});\nfastify.register(plugins);\nfastify.register(storage);\nfastify.register(routes);\nfastify.listen({port: 8080}, (error) => {\n  if (!error) {\n    process.on(\"uncaughtException\", (error) => {\n      fastify.log.error(\"[uncaughtException]\", error);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n      fastify.log.error(\"[unhandledRejection]\", error);\n    });\n  } else {\n    fastify.log.error(error);\n    process.exit(1);\n  }\n});\n"],"names":["FastifyPlugin","FastifySwagger","FastifyWebsocket","Type","fastifyPlugin","client","createClient","Fastify","pino","pinoPretty"],"mappings":"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"}